<!--# include virtual="/includes/header" -->
<main>
  <h1>Make a Donation</h1>
  <p><strong>Test Mode:</strong> No payment required. Minimum donation is $1.</p>
  
  <form action="/api/donate" method="POST" id="donation-form">
    <fieldset>
      <legend>Donation Amount</legend>
      <label>
        Amount (USD):
        <input type="number" name="amount" min="1" step="0.01" required placeholder="25.00">
      </label>
    </fieldset>

    <fieldset>
      <legend>Donation Type</legend>
      <label><input type="radio" name="type" value="one-time" checked>One-time</label>
      <label><input type="radio" name="type" value="monthly">Monthly</label>
      <label><input type="radio" name="type" value="yearly">Yearly</label>
    </fieldset>

    <fieldset>
      <legend>Cause Preference</legend>
      <label><input type="radio" name="party" value="democrat" required>Cause A (Democratic)</label>
      <label><input type="radio" name="party" value="republican" required>Cause B (Republican)</label>
    </fieldset>

    <fieldset>
      <legend>Display Information</legend>
      <label>
        Display Name (shown on website):
        <input type="text" name="display_name" placeholder="Anonymous" maxlength="50">
      </label>
      <small>Leave blank to show as "Anonymous"</small>
    </fieldset>

    <fieldset>
      <legend>Contact Information</legend>
      <label>
        Email Address:
        <input type="email" name="email" required placeholder="you@example.com">
      </label>
      
      <label>
        Full Legal Name:
        <input type="text" name="legal_name" required placeholder="John Smith" maxlength="100">
      </label>
      
      <label>
        Street Address:
        <input type="text" name="street" required placeholder="123 Main St" maxlength="200">
      </label>
      <div style="display:flex;gap:8px;">
        <label style="flex:1;">
          City:
          <input type="text" name="city" required placeholder="City">
        </label>
        <label style="width:120px;">
          State:
          <input type="text" name="state" required placeholder="CA" maxlength="2" style="text-transform:uppercase;">
        </label>
        <label style="width:120px;">
          ZIP:
          <input type="text" name="zip" required placeholder="12345" pattern="\d{5}(-\d{4})?">
        </label>
      </div>
    </fieldset>

    <fieldset>
      <legend>Employment Information</legend>
      <label>
        Employer Name:
        <input type="text" name="employer" required placeholder="Company Name" maxlength="100">
      </label>
      
      <label>
        Occupation:
        <input type="text" name="occupation" required placeholder="Software Engineer" maxlength="100">
      </label>
    </fieldset>

    <button type="submit" id="submit-btn">Submit Donation (Test Mode)</button>
  </form>

  <div id="success-message" style="display: none;">
    <h2>Donation Submitted Successfully!</h2>
    <p>Thank you for your contribution. Your donation has been recorded.</p>
  </div>

  <p><em>Note: This is test mode. No actual payment will be processed.</em></p>
</main>

<script>
document.getElementById('donation-form').addEventListener('submit', async function(e) {
  e.preventDefault();
  
  const submitBtn = document.getElementById('submit-btn');
  const originalText = submitBtn.textContent;
  submitBtn.textContent = 'Processing...';
  submitBtn.disabled = true;
  
  try {
    const form = new FormData(this);

    // Add timestamp server-side if you prefer; keep client timestamp too
    form.append('timestamp', new Date().toISOString());

    if (!form.get('display_name')) form.set('display_name', 'Anonymous');

    // build mailing_address from parts for storage/searching
    const street = (form.get('street') || '').trim();
    const city = (form.get('city') || '').trim();
    const state = (form.get('state') || '').trim().toUpperCase();
    const zip = (form.get('zip') || '').trim();
    form.set('mailing_address', `${street}\n${city}, ${state} ${zip}`);

    const resp = await fetch('/api/donate', {
      method: 'POST',
      body: form
    });

    if (resp.ok) {
      document.getElementById('donation-form').style.display = 'none';
      document.getElementById('success-message').style.display = 'block';
    } else {
      const json = await resp.json().catch(()=>null);
      const txt = json && json.error ? json.error : await resp.text();
      alert('Error: ' + txt);
    }
  } catch (err) {
    console.error(err);
    alert('Network error. Please try again.');
  } finally {
    submitBtn.textContent = originalText;
    submitBtn.disabled = false;
  }
});
</script>

<!--#include virtual="/includes/footer" -->