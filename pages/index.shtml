<!--# include virtual="/includes/header" -->
<main>
  <noscript>
    <div>
      This page requires JavaScript to function properly.
    </div>
  </noscript>

  <!-- Stats Grid -->
  <section class="stats-overview">
    <div class="stats-row">
      <div class="stat-item primary">
        <div class="stat-label">Total to Charity</div>
        <div class="stat-value" id="total-amount">$0</div>
      </div>
      <div class="stat-item">
        <div class="stat-label">This Month</div>
        <div class="stat-value" id="month-amount">$0</div>
      </div>
      <div class="stat-item">
        <div class="stat-label">Lives Saved</div>
        <div class="stat-value" id="lives-saved">0</div>
      </div>
    </div>
    
    <div class="stats-row secondary">
      <div class="stat-item">
        <div class="stat-label">Lives Saved This Month</div>
        <div class="stat-value" id="lives-saved-month">0</div>
      </div>
      <div class="stat-item cause-a">
        <div class="stat-label">Total to Cause A</div>
        <div class="stat-value" id="a">$0</div>
      </div>
      <div class="stat-item cause-b">
        <div class="stat-label">Total to Cause B</div>
        <div class="stat-value" id="b">$0</div>
      </div>
    </div>
  </section>

  <!-- Top Donors Section -->
  <section class="donors-section">
    <div class="donor-lists">
      <div class="donor-list-container">
        <h2>Top Donors (All Time)</h2>
        <div class="donor-list" id="top-donors-all">
          <div class="donor-item placeholder">Loading...</div>
        </div>
      </div>
      <div class="donor-list-container">
        <h2>Top Donors (This Month)</h2>
        <div class="donor-list" id="top-donors-month">
          <div class="donor-item placeholder">Coming soon...</div>
        </div>
      </div>
    </div>
  </section>

  <!-- US Map -->
  <section class="map-section">
    <h2>Donations Across the US</h2>
    <div class="map-container">
      <canvas id="us-map"></canvas>
    </div>
  </section>
</main>
<!--#include virtual="/includes/footer" -->

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-chart-geo@4.3.0/build/index.umd.min.js"></script>

<script>
async function loadStats() {
  try {
    const res = await fetch("/api/stats");
    const data = await res.json();
    
    console.log('Stats data:', data); // Debug log

    // Update counters
    document.getElementById("total-amount").textContent = "$" + (data.total_amount || 0).toLocaleString();
    document.getElementById("month-amount").textContent = "$" + (data.month_amount || 0).toLocaleString();
    document.getElementById("lives-saved").textContent = (data.lives_saved || 0).toLocaleString();
    document.getElementById("lives-saved-month").textContent = (data.lives_saved_month || 0).toLocaleString();
    document.getElementById("a").textContent = "$" + (data.a || 0).toLocaleString();
    document.getElementById("b").textContent = "$" + (data.b || 0).toLocaleString();

    // Top donors (all time)
    const topAllList = document.getElementById("top-donors-all");
    topAllList.innerHTML = "";
    
    if (data.top_donors && data.top_donors.length > 0) {
      data.top_donors.forEach(d => {
        const div = document.createElement("div");
        div.className = "donor-item";
        div.innerHTML = `<span class="donor-name">${d.donor}</span><span class="donor-amount">$${d.amount.toLocaleString()}</span>`;
        topAllList.appendChild(div);
      });
    } else {
      topAllList.innerHTML = '<div class="donor-item placeholder">No donors yet</div>';
    }

    // Top donors this month - TODO: Backend needs to support this
    const topMonthList = document.getElementById("top-donors-month");
    topMonthList.innerHTML = '<div class="donor-item placeholder">Coming soon...</div>';

    // Load map after stats are loaded
    loadMap(data);

  } catch (error) {
    console.error('Error loading stats:', error);
    // Show error state
    document.getElementById("top-donors-all").innerHTML = '<div class="donor-item placeholder">Error loading data</div>';
  }
}

function loadMap(data) {
  // US map with existing Chart.js implementation
  fetch("https://cdn.jsdelivr.net/npm/us-atlas/states-10m.json")
    .then(res => res.json())
    .then(us => {
      const canvas = document.getElementById("us-map");
      const states = ChartGeo.topojson.feature(us, us.objects.states).features;

      // TODO: Backend needs to parse mailing addresses and group by state
      const donationsByState = data.donations_by_state || {};

      new Chart(canvas, {
        type: 'choropleth',
        data: {
          labels: states.map(d => d.properties.name),
          datasets: [{
            label: "Donations by State",
            data: states.map((d) => ({
              feature: d,
              value: donationsByState[d.properties.name] || 0
            }))
          }]
        },
        options: {
          showOutline: true,
          showGraticule: false,
          scales: {
            projection: {
              axis: 'x',
              projection: 'albersUsa'
            },
            color: {
              axis: 'x',
              quantize: 5,
              legend: {
                position: 'bottom-right',
                align: 'right'
              }
            }
          },
          plugins: {
            legend: { display: false },
            tooltip: {
              callbacks: {
                label: ctx => `${ctx.label}: $${ctx.raw.value.toLocaleString()}`
              }
            }
          }
        }
      });
    })
    .catch(error => {
      console.error('Error loading map data:', error);
      const canvas = document.getElementById("us-map");
      canvas.style.display = 'none';
      canvas.parentElement.innerHTML = '<p style="text-align: center; color: #666; padding: 40px;">Map temporarily unavailable</p>';
      const container = document.querySelector('.map-container');
      // keep the canvas (so page layout remains stable) and show a small message
      const msg = document.createElement('div');
      msg.className = 'map-error';
      msg.textContent = 'Map temporarily unavailable';
      msg.style.cssText = 'text-align:center;color:#666;padding:20px;font-size:14px;';
      // remove any previous message then append
      const prev = container.querySelector('.map-error');
      if (prev) prev.remove();
      container.appendChild(msg);
    });
}

// Initialize page
loadStats();

// Refresh data every 30 seconds
setInterval(loadStats, 30000);
</script>