<!--# include virtual="/includes/header" -->
<main>
  <noscript>
    <div>
      This page requires JavaScript to function properly.
    </div>
  </noscript>

  <!-- Stats Grid -->
  <section class="stats-grid">
    <div class="stat-card">
      <h2>Total to Charity</h2>
      <p class="counter" id="total-amount">$0</p>
    </div>
    <div class="stat-card">
      <h2>This Month</h2>
      <p class="counter" id="month-amount">$0</p>
    </div>
    <div class="stat-card">
      <h2>Lives Saved</h2>
      <p class="counter" id="lives-saved">0</p>
    </div>
    <div class="stat-card">
      <h2>Lives Saved This Month</h2>
      <p class="counter" id="lives-saved-month">0</p>
    </div>
    <div class="stat-card">
      <h2>Total to Cause A</h2>
      <p class="counter" id="cause-a">$0</p>
    </div>
    <div class="stat-card">
      <h2>Total to Cause B</h2>
      <p class="counter" id="cause-b">$0</p>
    </div>
  </section>

  <!-- Donor Lists -->
  <section class="list-section">
    <h2>Recent Donations</h2>
    <ul id="recent-donations"></ul>

    <h2>Top Donors</h2>
    <ul id="top-donors"></ul>
  </section>

  <!-- US Map -->
  <section>
    <h2 style="margin-top:40px;">Donations Across the US</h2>
    <div id="us-map"></div>
  </section>
</main>
<!--#include virtual="/includes/footer" -->

<!-- Scripts -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-chart-geo@4.3.0/build/index.umd.min.js"></script>

<script>
async function loadStats() {
  const res = await fetch("/api/stats");
  const data = await res.json();

  // Update counters
  document.getElementById("total-amount").textContent = "$" + data.total_amount.toLocaleString();
  document.getElementById("month-amount").textContent = "$" + data.month_amount.toLocaleString();
  document.getElementById("lives-saved").textContent = data.lives_saved.toLocaleString();
  document.getElementById("lives-saved-month").textContent = data.lives_saved_month.toLocaleString();
  document.getElementById("cause-a").textContent = "$" + data.cause_a.toLocaleString();
  document.getElementById("cause-b").textContent = "$" + data.cause_b.toLocaleString();

  // Recent donations
  const recentList = document.getElementById("recent-donations");
  recentList.innerHTML = "";
  data.recent_donations.forEach(d => {
    const li = document.createElement("li");
    li.textContent = `${d.donor} — $${d.amount.toLocaleString()}`;
    recentList.appendChild(li);
  });

  // Top donors
  const topList = document.getElementById("top-donors");
  topList.innerHTML = "";
  data.top_donors.forEach(d => {
    const li = document.createElement("li");
    li.textContent = `${d.donor} — $${d.amount.toLocaleString()}`;
    topList.appendChild(li);
  });

  // US map
  fetch("https://cdn.jsdelivr.net/npm/us-atlas/states-10m.json")
    .then(res => res.json())
    .then(us => {
      const ctx = document.getElementById("us-map").appendChild(document.createElement("canvas"));
      const states = ChartGeo.topojson.feature(us, us.objects.states).features;

      new Chart(ctx, {
        type: 'choropleth',
        data: {
          labels: states.map(d => d.properties.name),
          datasets: [{
            label: "Donations by State",
            data: states.map((d, i) => ({
              feature: d,
              value: data.donations_by_state[d.properties.name] || 0
            }))
          }]
        },
        options: {
          showOutline: true,
          showGraticule: false,
          scales: {
            projection: {
              axis: 'x',
              projection: 'albersUsa'
            }
          },
          plugins: {
            legend: { display: false },
            tooltip: {
              callbacks: {
                label: ctx => `$${ctx.raw.value.toLocaleString()}`
              }
            }
          }
        }
      });
    });
}

loadStats();
</script>